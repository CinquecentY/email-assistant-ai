generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clients {
  id          String   @id @default(cuid())
  name        String
  email       String
  phoneNumber String
  city        String
  country     String
  ownerId     String
  status      String
  createdAt   DateTime @default(now())
  createdBy   String

  Documents Documents[]

  Events Events[]

  History History[]

  Notes Notes[]

  User Users @relation(fields: [ownerId], references: [id], onDelete: NoAction)
}

model Documents {
  id        String   @id @default(cuid())
  type      String
  clientId  String
  amount    Int
  products  String
  status    String
  createdAt DateTime
  createdBy String
  Client    Clients  @relation(fields: [clientId], references: [id], onDelete: NoAction)
  User      Users    @relation(fields: [createdBy], references: [id], onDelete: NoAction)
}

model Events {
  id          String   @id @default(cuid())
  clientId    String
  ownerId     String
  name        String
  description String
  startingAt  DateTime
  endingAt    DateTime
  createdAt   DateTime @default(now())
  createdBy   String
  Client      Clients  @relation(fields: [clientId], references: [id], onDelete: NoAction)
  User        Users    @relation(fields: [createdBy], references: [id], onDelete: NoAction)
}

model History {
  id        String   @id @default(cuid())
  clientId  String
  action    String
  createdAt DateTime
  createdBy String
  Client    Clients  @relation(fields: [clientId], references: [id], onDelete: NoAction)
  User      Users    @relation(fields: [createdBy], references: [id], onDelete: NoAction)
}

model Notes {
  id          String   @id @default(cuid())
  clientId    String
  description String
  createdAt   DateTime @default(now())
  createdBy   String
  Client      Clients  @relation(fields: [clientId], references: [id], onDelete: NoAction)
  User        Users    @relation(fields: [createdBy], references: [id], onDelete: NoAction)
}

model Users {
  id        String      @id @default(cuid())
  email     String?     @unique
  name      String?
  createdAt DateTime    @default(now())
  Clients   Clients[]
  Documents Documents[]
  Events    Events[]
  History   History[]
  Notes     Notes[]

  Account Accounts[]
}

model Accounts {
  id     String @id @default(cuid())
  userId String

  binaryIndex Json?

  token    String @unique
  provider String
  email    String
  name     String

  nextDeltaToken String?

  user Users @relation(fields: [userId], references: [id])
}
